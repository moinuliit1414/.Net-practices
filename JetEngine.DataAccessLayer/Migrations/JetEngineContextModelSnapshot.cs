// <auto-generated />
using JetEngine.DataAccessLayer.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace JetEngine.DataAccessLayer.Migrations
{
    [DbContext(typeof(JetEngineContext))]
    partial class JetEngineContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JetEngine.DataAccessLayer.Model.MigrationHistory", b =>
                {
                    b.Property<string>("MigrationId")
                        .HasMaxLength(150);

                    b.Property<string>("ContextKey")
                        .HasMaxLength(300);

                    b.Property<byte[]>("Model")
                        .IsRequired();

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.HasKey("MigrationId", "ContextKey");

                    b.ToTable("__MigrationHistory");
                });

            modelBuilder.Entity("JetEngine.DataAccessLayer.Model.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("JetEngine.DataAccessLayer.Model.User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128);

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTime?>("LockoutEndDateUtc")
                        .HasColumnType("datetime");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("User");
                });

            modelBuilder.Entity("JetEngine.DataAccessLayer.Model.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .HasName("IX_UserId");

                    b.ToTable("UserClaim");
                });

            modelBuilder.Entity("JetEngine.DataAccessLayer.Model.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<string>("UserId")
                        .HasMaxLength(128);

                    b.HasKey("LoginProvider", "ProviderKey", "UserId");

                    b.HasIndex("UserId")
                        .HasName("IX_UserId");

                    b.ToTable("UserLogin");
                });

            modelBuilder.Entity("JetEngine.DataAccessLayer.Model.UserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(128);

                    b.Property<string>("RoleId")
                        .HasMaxLength(128);

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId")
                        .HasName("IX_RoleId");

                    b.HasIndex("UserId")
                        .HasName("IX_UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("JetEngine.DataAccessLayer.Model.UserClaim", b =>
                {
                    b.HasOne("JetEngine.DataAccessLayer.Model.User", "User")
                        .WithMany("UserClaim")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_dbo.UserClaim_dbo.User_UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JetEngine.DataAccessLayer.Model.UserLogin", b =>
                {
                    b.HasOne("JetEngine.DataAccessLayer.Model.User", "User")
                        .WithMany("UserLogin")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_dbo.UserLogin_dbo.User_UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JetEngine.DataAccessLayer.Model.UserRole", b =>
                {
                    b.HasOne("JetEngine.DataAccessLayer.Model.Role", "Role")
                        .WithMany("UserRole")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_dbo.UserRole_dbo.Role_RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JetEngine.DataAccessLayer.Model.User", "User")
                        .WithMany("UserRole")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_dbo.UserRole_dbo.User_UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
